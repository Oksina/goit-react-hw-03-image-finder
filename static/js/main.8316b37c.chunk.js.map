{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/pixabayApi.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Error/Error.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/Error/Error.module.css"],"names":["module","exports","fetchImages","searchQuery","currentPage","perPage","axios","get","then","response","data","hits","modalRoot","document","getElementById","Modal","state","isLoading","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","handleLoad","setState","window","addEventListener","this","removeEventListener","largeImgUrl","createPortal","className","s","Overlay","onClick","src","alt","onLoad","Component","ImageGalleryItem","gallery","setLargeImg","toggleModal","map","image","webformatURL","tags","id","ImageGalleryItemImage","ImageGallery","SearchForm","query","handleChange","value","handleSubmit","preventDefault","onSubmit","Searchbar","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Button","Error","fetchLength","galleryLength","error","defaultProps","App","selectedImg","showModal","onChangeQuery","getImages","options","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","largeImageURL","prevProps","shouldRenderLoadMoreButton","message","color","height","width","timeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8316b37c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__235E8\",\"Modal\":\"Modal_Modal__3f179\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Xl2eF\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2MrlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3HVnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__22l64\"};","import axios from 'axios';\n\nconst apiKey = '20073570-94be55d6c10f1ac23fcd8c784';\n//const apiKey = process.env.REACT_APP_API_KEY;\nconst url = 'https://pixabay.com/api/';\n\nfunction fetchImages({ searchQuery = '', currentPage = 1, perPage = 12 }) {\n    return axios\n        .get(\n            `${url}?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n        )\n        .then(response => response.data.hits);\n}\n\nexport { fetchImages };\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends Component {\n    state = {\n        isLoading: false,\n    };\n    static propTypes = {\n        onClose: PropTypes.func.isRequired,\n        largeImgUrl: PropTypes.string.isRequired,\n    };\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            this.props.onClose();\n        }\n    };\n    handleBackdropClick = e => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    };\n    handleLoad = () => {\n        this.setState({ isLoading: true });\n    };\n\n    render() {\n        const { handleBackdropClick } = this;\n        const { largeImgUrl } = this.props;\n        return createPortal(\n            <div className={s.Overlay} onClick={handleBackdropClick}>\n                <div className={s.Modal}>\n                    <img\n                        src={largeImgUrl}\n                        alt=\"Gallery item\"\n                        onLoad={this.handleLoad}\n                    />\n                </div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ gallery, setLargeImg, toggleModal }) => {\n    return gallery.map(image => {\n        const { webformatURL, tags, id } = image;\n        return (\n            <li className={s.ImageGalleryItem} key={id}>\n                <img\n                    onClick={() => setLargeImg(image)}\n                    src={webformatURL}\n                    alt={tags}\n                    className={s.ImageGalleryItemImage}\n                    onClose={toggleModal}\n                />\n            </li>\n        );\n    });\n};\nImageGalleryItem.propTypes = {\n    gallery: PropTypes.arrayOf(\n        PropTypes.shape({\n            webformatURL: PropTypes.string.isRequired,\n            tags: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    setLargeImg: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nclass ImageGallery extends Component {\n    render() {\n        const { gallery, setLargeImg, toggleModal } = this.props;\n        return (\n            <ul className={s.ImageGallery}>\n                <ImageGalleryItem\n                    gallery={gallery}\n                    setLargeImg={setLargeImg}\n                    toggleModal={toggleModal}\n                />\n            </ul>\n        );\n    }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nclass SearchForm extends Component {\n    state = { query: '' };\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    handleChange = e => {\n        this.setState({ query: e.currentTarget.value });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.onSubmit(this.state.query);\n\n        this.setState({ query: '' });\n    };\n\n    render() {\n        return (\n            <header className={s.Searchbar}>\n                <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className={s.SearchFormButton}>\n                        <span className={s.SearchFormButtonLabel}>Search</span>\n                    </button>\n\n                    <input\n                        className={s.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        value={this.state.query}\n                        placeholder=\"Search images and photos\"\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\nexport default SearchForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nclass Button extends Component {\n    state = {};\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n    };\n\n    render() {\n        return (\n            <button\n                type=\"button\"\n                className={s.Button}\n                onClick={this.props.onClick}\n            >\n                Load more\n            </button>\n        );\n    }\n}\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Error.module.css';\n\nconst Error = ({ fetchLength, galleryLength, searchQuery, error }) => {\n    if (error) {\n        // console.log(error);\n        return <p className={s.error}>Oops! Something wrong! Request error!</p>;\n    } else if (!error) {\n        if (!searchQuery) {\n            return <p className={s.error}>Please enter image name!</p>;\n        } else if (searchQuery) {\n            if (!fetchLength && !galleryLength) {\n                return (\n                    <p className={s.error}>\n                        Image not found. Please check your request and try\n                        again!\n                    </p>\n                );\n            } else if (fetchLength < 12 && galleryLength > 0) {\n                return (\n                    <p className={s.error}>\n                        These are all the images we found!\n                    </p>\n                );\n            }\n        }\n    }\n\n    return <p></p>;\n};\nError.defaultProps = {\n    fetchLength: 0,\n    galleryLength: 0,\n    searchQuery: '',\n    error: false,\n};\nError.propTypes = {\n    fetchLength: PropTypes.number,\n    galleryLength: PropTypes.number,\n    searchQuery: PropTypes.string,\n    error: PropTypes.bool,\n};\nexport default Error;\n","import React, { Component } from 'react';\nimport { fetchImages } from '../src/services/pixabayApi';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport Button from './components/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport Error from './components/Error/Error';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        gallery: [],\n        currentPage: 1,\n        searchQuery: '',\n        isLoading: false,\n        error: false,\n        selectedImg: '',\n        showModal: false,\n        fetchLength: null,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.getImages();\n        }\n    }\n    toggleModal = () => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n        }));\n    };\n    onChangeQuery = query => {\n        this.setState({\n            searchQuery: query,\n            currentPage: 1,\n            gallery: [],\n            error: false,\n            selectedImg: '',\n            showModal: false,\n            fetchLength: 0,\n        });\n    };\n    getImages = () => {\n        const { currentPage, searchQuery } = this.state;\n        const options = { currentPage, searchQuery };\n\n        this.setState({ isLoading: true });\n\n        fetchImages(options)\n            .then(gallery => {\n                this.setState(prevState => ({\n                    gallery: [...prevState.gallery, ...gallery],\n                    currentPage: prevState.currentPage + 1,\n                    fetchLength: gallery.length,\n                }));\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            })\n            .catch(error => this.setState({ error }))\n            .finally(() => this.setState({ isLoading: false }));\n    };\n    setLargeImg = image => {\n        this.toggleModal();\n        this.setState({ selectedImg: image.largeImageURL });\n    };\n\n    render() {\n        const {\n            showModal,\n            gallery,\n            isLoading,\n            error,\n            selectedImg,\n            fetchLength,\n            searchQuery,\n        } = this.state;\n        const shouldRenderLoadMoreButton = gallery.length > 0 && !isLoading;\n        return (\n            <div className=\"App\">\n                <SearchBar onSubmit={this.onChangeQuery} />\n                <ImageGallery\n                    gallery={gallery}\n                    setLargeImg={this.setLargeImg}\n                />\n                {error && <Error message={error.message} />}\n                {isLoading && (\n                    <Loader\n                        type=\"Puff\"\n                        color=\"#00BFFF\"\n                        height={50}\n                        width={50}\n                        timeout={3000}\n                        className=\"loader\"\n                    />\n                )}\n                {shouldRenderLoadMoreButton && (\n                    <Button onClick={this.getImages} />\n                )}\n                {showModal && (\n                    <Modal\n                        largeImgUrl={selectedImg}\n                        onClose={this.toggleModal}\n                    />\n                )}\n                <Error\n                    fetchLength={fetchLength}\n                    galleryLength={gallery.length}\n                    searchQuery={searchQuery}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3HKGh\",\"SearchForm\":\"Searchbar_SearchForm__1IaLM\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1tb_s\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1Q_gT\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2_XHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1vvBx\"};"],"sourceRoot":""}